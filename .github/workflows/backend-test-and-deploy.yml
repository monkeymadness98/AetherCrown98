name: Backend CI/CD - Test and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm test
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}

    - name: Build project
      run: npm run build
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        PAYPAL_CLIENT_ID: ${{ secrets.PAYPAL_CLIENT_ID }}
        PAYPAL_CLIENT_SECRET: ${{ secrets.PAYPAL_CLIENT_SECRET }}

    - name: Test results notification
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ All tests passed successfully!"
        else
          echo "‚ùå Tests failed! Deployment blocked."
          exit 1
        fi

  deploy-backend:
    name: Deploy Backend to Render
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Render
      run: |
        echo "üöÄ Deploying backend to Render..."
        echo "Backend deployment would trigger here"
        # In production, add Render deployment webhook or CLI command
        # curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

    - name: Deployment notification
      run: |
        echo "‚úÖ Backend deployed successfully to Render!"
        echo "üîó Backend URL: https://aethercrown98-backend.onrender.com"
